#
# ----------------------------
# Network Config's:
# ----------------------------

# Local address where LS will listen for Aion client connections (* = bind any local IP)
loginserver.network.client.socket_address = *:2106

# How many times player can try to login before he get's banned for brute-forcing
loginserver.network.client.logintrybeforeban = 5

# For what time in minutes the player should be banned in case of brute-forcing
loginserver.network.client.bantimeforbruteforcing = 15

# Local address where LS will listen for GS connections (* = bind any local IP)
loginserver.network.gameserver.socket_address = *:9014

# Number of extra threads dedicated only to read/write network data.
# Value < 1 means that acceptor thread will also handle read & write.
# Value > 0 means there will be x dedicated read/write threads + 1 acceptor.
loginserver.network.nio.threads = 0

# Create accounts automatically on login or not?
loginserver.accounts.autocreate = true

# Enable\disable external authentication for accounts
# 	With this, login credentials will be checked externally and not be stored in LS DB
# 	Set loginserver.accounts.autocreate to true, otherwise new users can't log in
loginserver.accounts.externalauth = false

# URL for external authentication, that is used to receive an JSON encoded string, holding the auth status
# 	LS will send name and password it received from the client via HTTP POST (params: u=[account name], p=[password])
# 	JSON response must be of the following nature:
# 	{
# 		"id": string value //unique user id or name that will be used to identify the LS user account; can be omitted if not authed
# 		"state": number value //auth state (response ID, see com.aionemu.loginserver.network.aion/AionAuthResponse.java)
# 	} 
loginserver.accounts.externalauth.url = 

# Enable\disable brute-force protector from 1 IP on account login
loginserver.server.bruteforceprotector = true