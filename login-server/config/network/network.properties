#
# ----------------------------
# Network Config's:
# ----------------------------

# Port that will be used by LS to listen for client connections
loginserver.network.client.port = 2106

# LS will bind specified network interface
# * - bind all interfaces
loginserver.network.client.host = *

# How many times player can try to login before he get's banned for brute-forcing
loginserver.network.client.logintrybeforeban = 5

# For what time in minutes the player should be banned in case of brute-forcing
loginserver.network.client.bantimeforbruteforcing = 15

# Host that will be used by LS to listen for GS connections
loginserver.network.gameserver.host = *

# Port that will be used by LS to listen for GS connections
loginserver.network.gameserver.port = 9014

# Number of additional threads for NIO that will handle only reading
loginserver.network.nio.threads.read = 0

# Number of additional threads for NIO that will handle only writing
loginserver.network.nio.threads.write = 0


# Create accounts automatically on login or not?
loginserver.accounts.autocreate = true

# Enable\disable external authentication for accounts
# With this, login credentials will be checked externally and not be stored in LS DB
# Set loginserver.accounts.autocreate to true, so that every authenticated user can actually log in
loginserver.accounts.externalauth = false

# URL for external authentication, that is used to receive an JSON encoded string, holding the auth status
# LS will send name and password it received from the client via the POST method (params: u=[account name], p=[password])
# JSON reply must be of the following nature:
# {
# 	"id": string value //unique user id or name that will be used to identify the LS user account; can be omitted if not authed
# 	"state": number value //auth state (response ID, see com.aionemu.loginserver.network.aion/AionAuthResponse.java)
# } 
loginserver.accounts.externalauth.url = 


# Set if the server is in maintenance mode, so only GM's can login
loginserver.server.maintenance = false

# Set GM level for maintenance mode (Default 3)
loginserver.server.maintenance.gmlevel = 3

# Enable\disable flood protector from 1 IP on account login
loginserver.server.floodprotector = true

# legal reconnection time. if faster - ban for loginserver.network.client.bantimeforbruteforcing min
# seconds
loginserver.server.floodprotector.fastreconnection.time = 5

# IP's excluded from flood protection
loginserver.server.floodprotector.excluded.ips = 

# Enable\disable brute-force protector from 1 IP on account login
loginserver.server.bruteforceprotector = true

# Enable\disable checking GS if it is still alive
loginserver.server.pingpong = true

# Time between checks (in milliseconds)
loginserver.server.pingpong.delay = 3000